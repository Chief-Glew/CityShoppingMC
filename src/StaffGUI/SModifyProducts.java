/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StaffGUI;

import Classes.Clothing;
import Classes.Footwear;
import Classes.DBManager;
import Classes.GUI;

import java.util.HashMap;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author 30137568
 */
//Global Variables
public class SModifyProducts extends javax.swing.JFrame
{
    // Global Variables
    HashMap<Integer, Clothing> clothes = new HashMap<>();
    HashMap<Integer, Footwear> shoes = new HashMap<>();
    String error = "EMPTY1971";
    String action = "";
    int columnNumber = 4;
    String columnName = "";
    String[] data = new String[5];
    Clothing cloth = new Clothing();
    Footwear shoe = new Footwear();
    boolean isClothing = false;
    DBManager db = new DBManager();
    GUI gui = new GUI();

    //Group radio buttons together so they can go from one category to another
    private void groupButton()
    {
        ButtonGroup bg1 = new ButtonGroup();
        bg1.add(rbClothing);
        bg1.add(rbFootwear);
    }

    /**
     * Creates new form SViewProducts
     */
    public SModifyProducts()
    {
        initComponents();
        // Grouping Radio Buttons
        groupButton();
    }

    public SModifyProducts(HashMap<Integer, Clothing> cl, HashMap<Integer, Footwear> ft)
    {
        initComponents();
        //Passed in global variables equal parameters passed in
        clothes = cl;
        shoes = ft;

        // Grouping Radio Buttons
        groupButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        btnSHome = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAddProduct = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        rbClothing = new javax.swing.JRadioButton();
        rbFootwear = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSProducts = new javax.swing.JTable();
        lblResults = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSHome.setText("RETURN TO STAFF HOME");
        btnSHome.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSHomeActionPerformed(evt);
            }
        });

        jLabel1.setText("EDIT PRODUCTS");

        jLabel2.setText("CATEGORIES");

        jLabel3.setText("PRODUCT");

        btnAddProduct.setText("ADD PRODUCT");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddProductActionPerformed(evt);
            }
        });

        btnEdit.setText("EDIT PRODUCT");
        btnEdit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE PRODUCT");
        btnDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDeleteActionPerformed(evt);
            }
        });

        rbClothing.setText("Clothing");
        rbClothing.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbClothingActionPerformed(evt);
            }
        });

        rbFootwear.setText("Footwear");
        rbFootwear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbFootwearActionPerformed(evt);
            }
        });

        tblSProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ProductID", "Product Name", "Price", "Stock Level", ""
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSProducts);

        lblResults.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(72, 72, 72))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnEdit)
                        .addGap(137, 137, 137)
                        .addComponent(btnDelete))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(rbClothing)
                            .addComponent(rbFootwear))
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddProduct)
                            .addComponent(lblResults, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSHome)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(rbClothing)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbFootwear))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(lblResults, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddProduct)
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSHomeActionPerformed
        // TODO add your handling code here:
        //Takes you back to the staff home page
        SHomeGUI sHome = new SHomeGUI();
        this.dispose();
        sHome.setVisible(true);
    }//GEN-LAST:event_btnSHomeActionPerformed

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        // Takes you to the add product page
        SAddProduct addProd = new SAddProduct();
        this.dispose();
        addProd.setVisible(true);
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void rbClothingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbClothingActionPerformed
        // TODO add your handling code here:
        // renames column to Mesurement
        columnName = "Measurement";
        gui.renameColumn(tblSProducts, 4, columnName);

        // loads all clothing from the  database into a hashmap
        clothes = db.loadAllClothing();
        DefaultTableModel dtm = (DefaultTableModel) tblSProducts.getModel();

        // Creates a string array for the collumn
        // Populates the table by taking in four parameters a String array a hashmap, a default table model and the table
        String[] data = new String[5];
        gui.populateClothes(data, clothes, dtm, tblSProducts);

    }//GEN-LAST:event_rbClothingActionPerformed

    private void rbFootwearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFootwearActionPerformed
        // renames column to Size
        columnName = "Size";
        gui.renameColumn(tblSProducts, columnNumber, columnName);

        // load all footwear from the database to the hashmap
        shoes = db.loadAllFootwear();

        DefaultTableModel dtm = (DefaultTableModel) tblSProducts.getModel();
       

        // Populates the table by taking in four parameters a String array a hashmap, a default table model and the table
        gui.populateShoes(data, shoes, dtm, tblSProducts);

    }//GEN-LAST:event_rbFootwearActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // If the clothing radio button is selected
        action = "edited";
        // if the clothing radio button is selected
        if (rbClothing.isSelected())
        {
            // Convert the selected row into a clothing object
            cloth = gui.findClothing(tblSProducts);
            isClothing = true;

        }
        // If the footwear radio button is selected
        if (rbFootwear.isSelected())
        {
            
            // Convert the selected row into a footwear object
            shoe = gui.findFootwear(tblSProducts);
            isClothing = false;

        }
        // if niether clothing or footwear radio button is selected
        if (!rbClothing.isSelected() && !rbFootwear.isSelected())
        {
            lblResults.setText("Please select either the Clothing or Footwear radio button");
        }
        else
        {
            // If footwear or clothing equals error text this means a row has not been selcted
            if (cloth.getProductName().equals(error) || shoe.getProductName().equals(error))
            {
                if (rbClothing.isSelected())
                {
                    // outputs a warning that clothing has not been edited.
                    gui.warning(lblResults, cloth, action);
                }
                else
                {
                    // outputs a warning that footwear has not been edited.
                    gui.warning(lblResults, shoe, action);
                }
            }
            else
            {
                // passes the objects isClothing, cloth and shoe into SProductEdit
                // takes you to the SProductEdit
                SProductEdit spe = new SProductEdit(isClothing, cloth, shoe);
                this.dispose();
                spe.setVisible(true);
            }
        }


    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        // If the clothing radio button is selected
        action = "deleted";
        DefaultTableModel dtm = (DefaultTableModel) tblSProducts.getModel();
        if (rbClothing.isSelected())
        {
            cloth = gui.findClothing(tblSProducts);
            // If clothing equals error text this means a row has not been selcted
            if (cloth.getProductName().equals(error))
            { 
                // outputs a warning that clothing has not been deleted.
                gui.warning(lblResults, cloth, action);
            }
            else
            {
                // Deletes clothing from the database, loads the clothing from the database
                // Outputs that clothing has been deleted
                // Populates table
                db.deleteClothing(cloth);
                clothes = db.loadAllClothing();
                gui.success(lblResults, cloth, action);
                gui.populateClothes(data, clothes, dtm, tblSProducts);

            }
            isClothing = true;
        }

        // If the footwear radio button is selected
        if (rbFootwear.isSelected())
        {
            shoe = gui.findFootwear(tblSProducts);
            // If footwear equals error text this means a row has not been selcted
            if (shoe.getProductName().equals(error))
            {
                // outputs a warning that clothing has not been deleted.
                gui.warning(lblResults, shoe, action);
            }
            else
            {
                // Deletes clothing from the database, loads the clothing from the database
                // Outputs that clothing has been deleted
                // Populates table
                db.deleteClothing(cloth);
                shoes = db.loadAllFootwear();
                gui.success(lblResults, shoe, action);
                gui.populateShoes(data, shoes, dtm, tblSProducts);

            }

            //Clothing selected is true
            isClothing = false;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(SModifyProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(SModifyProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(SModifyProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(SModifyProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SModifyProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSHome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblResults;
    private javax.swing.JRadioButton rbClothing;
    private javax.swing.JRadioButton rbFootwear;
    private javax.swing.JTable tblSProducts;
    // End of variables declaration//GEN-END:variables
}
