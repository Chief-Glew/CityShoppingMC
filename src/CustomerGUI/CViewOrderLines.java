/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomerGUI;

import Classes.*;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mcarr
 */
public class CViewOrderLines extends javax.swing.JFrame {
    //HashMap<Integer, OrderLine> orderLines = new HashMap<>();
    HashMap<Integer, OrderLine> oals = new HashMap<>();
    GUI gui = new GUI();
    OrderLine odl = new OrderLine();
    DBManager db = new DBManager();
    Customer cust = new Customer();
    double olTotal;
    NumberFormat decFormat = new DecimalFormat("#0.00");
    Order order = new Order();
    
    
    
    
    public CViewOrderLines() 
    {
        initComponents();
        
        oals = db.loadOrderLinesNoOrderID();
        
                //Creates a default list model

         DefaultTableModel dtm = (DefaultTableModel)tblCOrderLine.getModel();
        //gui.clearRows(dtm.getRowCount(), dtm);
        String [] data = new String[4];
        gui.populateOrderLines(data, oals, dtm, tblCOrderLine);
        
        olTotal = 0.00;
        for(OrderLine o : oals.values())
        {
            olTotal += o.getLineTotal();
        }
        String sFormat = decFormat.format(olTotal);
        lblTotal.setText("£" + sFormat);
    }
    
    public CViewOrderLines(HashMap <Integer, OrderLine> orls, Customer c) 
    {
        initComponents();
        
        oals = db.loadOrderLinesNoOrderID();
        cust = c;
        cust = db.loadCustomer(cust.getUsername());
        DefaultTableModel dtm = (DefaultTableModel)tblCOrderLine.getModel();
        //gui.clearRows(dtm.getRowCount(), dtm);
        String [] data = new String[4];
        gui.populateOrderLines(data, oals, dtm, tblCOrderLine);
        
        
        
        for(OrderLine o : oals.values())
        {
            olTotal += o.getLineTotal();
            
        }
        double formTotal = olTotal;
        String sFormat = decFormat.format(formTotal);
        lblTotal.setText("£" + sFormat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBrowseProducts = new javax.swing.JButton();
        btnBuy = new javax.swing.JButton();
        btnAddOrderLines = new javax.swing.JButton();
        btnRemoveOrderLines = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCOrderLine = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBrowseProducts.setText("Return To Orders");
        btnBrowseProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseProductsActionPerformed(evt);
            }
        });

        btnBuy.setText("Buy");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        btnAddOrderLines.setText("Add More Products");

        btnRemoveOrderLines.setText("Remove Selected Product");
        btnRemoveOrderLines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveOrderLinesActionPerformed(evt);
            }
        });

        jLabel1.setText("Order Line Total:");

        tblCOrderLine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Order Name ", "Quantity", "Total"
            }
        ));
        jScrollPane1.setViewportView(tblCOrderLine);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1)
                                            .addComponent(btnBuy))
                                        .addGap(18, 18, 18)
                                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnAddOrderLines)))
                            .addComponent(btnRemoveOrderLines))
                        .addGap(178, 178, 178))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBrowseProducts)
                        .addGap(55, 55, 55)
                        .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnBrowseProducts))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuy)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddOrderLines)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveOrderLines)))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveOrderLinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveOrderLinesActionPerformed
        // TODO add your handling code here:
          if (olTotal == 0) 
          {
              lblResult.setText("Cannot remove any items since orders are empty");
          }
          else
          {
            
            odl = gui.findOrderLine(tblCOrderLine);
            
            olTotal -= odl.getLineTotal();
            
            int stockBack  = odl.getQuantity();
            Product prod = odl.getProduct();
            int currentStock = prod.getStockLevel();
            int ammendedStock = stockBack + currentStock;
            prod.setStockLevel(ammendedStock);
            db.editProducts(prod);
            
            double formTotal = olTotal;
            String sFormat = decFormat.format(formTotal);
            System.out.println(sFormat);
            db.deleteOrderLine(odl);
            oals = db.loadOrderLinesNoOrderID();
            lblTotal.setText("£" + sFormat);
            
            //Creates a default list model
            DefaultTableModel dtm = (DefaultTableModel)tblCOrderLine.getModel();
            //gui.clearRows(dtm.getRowCount(), dtm);
            String [] data = new String[4];
            gui.populateOrderLines(data, oals, dtm, tblCOrderLine);
            //Delete the clothing object from the database
            //db.deleteClothing(cloth);
            // Loads all clothing into the hashmap
            //clothes = db.loadAllClothing(); 
          }
        
        
    }//GEN-LAST:event_btnRemoveOrderLinesActionPerformed

    private void btnBrowseProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseProductsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)tblCOrderLine.getModel();
        int rows = dtm.getRowCount();
        oals = db.loadOrderLinesNoOrderID();
        
        
        if (!oals.isEmpty())
        {
            
                Date date  = new Date();
                String status = "Incomplete";
                order = new Order(date, olTotal, status);
                
                 //I want to asign the correct orderID to the correct orderLine
                //Once it's been assigned an orderline I want it to retain that order line and not override it.
                db.saveOrders(order, cust.getId());
                order = db.loadOrder(order.getOrderDate());
                for(OrderLine ol : oals.values())
                {
                    Product prod = ol.getProduct();
                    int newStock = prod.getStockLevel() - ol.getQuantity();
                    db.editProducts(prod);
//               
                }
                
                db.editOrderOlsID(order.getOrderId(), oals);
 
        }
        
        CBrowseProducts cbp = new CBrowseProducts(cust);
        this.dispose();
        cbp.setVisible(true);
    }//GEN-LAST:event_btnBrowseProductsActionPerformed

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        // TODO add your handling code here:
        if(olTotal == 0.00)
        {
            lblResult.setText("There are no items in your cart. Go Back to browse products to add items to your basket.");
        }
        else
        {
            HashMap<Integer, OrderLine> orderLines = new HashMap<>();
            orderLines = db.loadOrderLinesNoOrderID();
            Date date = new Date();
            
        
            String status = "Ordered";
        
            double total = olTotal;
        
            Order order = new Order(date, total, status);
            db.saveOrders(order, cust.getId());
            order = db.loadOrder(order.getOrderDate());
           
//            oals = db.loadOrderLinesNoOrderID();
//            
////            db.saveOrders(order, cust.getId());
//            Order ord = db.loadOrder(order.getOrderDate());
//            db.editOrderOlsID(ord.getOrderId(), oals);
            //oals = db.findCustCompleteOrderLines(cust);
//            order.setOrderLines(oals);
//        
//            //Here I want to check which values in the hash map have a orderId
//            //Then I want to remove them from the hashmap
//            //I'm doing this so ordered orderlines do not show up
              //oals = db.loadOrderLinesNoOrderID();
              
              
              db.editOrderOlsID(order.getOrderId(), orderLines);
              orderLines= db.loadOrderLinesNoOrderID(); 
              
            DefaultTableModel dtm = (DefaultTableModel)tblCOrderLine.getModel();
            //gui.clearRows(dtm.getRowCount(), dtm);
            String [] data = new String[4];
            gui.populateOrderLines(data, orderLines, dtm, tblCOrderLine);
            double olLTotal = 0.00;
            lblTotal.setText("£" + olLTotal);
            
        }


        
    }//GEN-LAST:event_btnBuyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CViewOrderLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CViewOrderLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CViewOrderLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CViewOrderLines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CViewOrderLines().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrderLines;
    private javax.swing.JButton btnBrowseProducts;
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnRemoveOrderLines;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblCOrderLine;
    // End of variables declaration//GEN-END:variables
}
