/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomerGUI;
import Classes.*;
import java.util.HashMap;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author mcarr
 */
public class CBrowseProducts extends javax.swing.JFrame {

    DBManager db = new DBManager();
    Customer cust = new Customer();
    GUI gui = new GUI();
    String action = "";
    String error = "EMPTY1971";
    HashMap<Integer, Clothing> clothes = new HashMap<>();
    HashMap<Integer, Footwear> shoes = new HashMap<>();
    HashMap<Integer, OrderLine> ols = new HashMap<>();
    int itemTaken;
    int columnNumber = 4;
    String columnName = "";
    /**
     * Creates new form ViewProducts
     */
    private void groupButton()
    {
        ButtonGroup bg2 = new ButtonGroup();
        bg2.add(rbClothing);
        bg2.add(rbFootwear);
        
    }
    
    public CBrowseProducts() 
    {
        initComponents();
        groupButton();
        clothes = db.loadAllClothing();
        shoes = db.loadAllFootwear();
    }
    
    public CBrowseProducts(Customer c)
    {
        initComponents();
        groupButton();
        cust = c;
        clothes = db.loadAllClothing();
        shoes = db.loadAllFootwear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        btnCHomePage = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnCViewBasket = new javax.swing.JButton();
        rbClothing = new javax.swing.JRadioButton();
        rbFootwear = new javax.swing.JRadioButton();
        comboQuantity = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnAddProducts = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCProducts = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCHomePage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCHomePage.setText("Return to Customer HomePage");
        btnCHomePage.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCHomePageActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Browse Products");

        btnCViewBasket.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCViewBasket.setText("View Basket");
        btnCViewBasket.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCViewBasketActionPerformed(evt);
            }
        });

        rbClothing.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbClothing.setText("Clothing");
        rbClothing.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbClothingActionPerformed(evt);
            }
        });

        rbFootwear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbFootwear.setText("Footwear");
        rbFootwear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rbFootwearActionPerformed(evt);
            }
        });

        comboQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));
        comboQuantity.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                comboQuantityActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Quanity:");

        btnAddProducts.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddProducts.setText("Add to Basket");
        btnAddProducts.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddProductsActionPerformed(evt);
            }
        });

        lblResult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tblCProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ProductID", "Product Name", "Price", "Stock Level", ""
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCProducts);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbFootwear)
                    .addComponent(rbClothing)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCHomePage)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel1)
                                .addGap(177, 177, 177)
                                .addComponent(btnCViewBasket))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAddProducts)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(comboQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCHomePage)
                    .addComponent(jLabel1)
                    .addComponent(btnCViewBasket))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(btnAddProducts))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbClothing)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbFootwear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbClothingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbClothingActionPerformed
        // TODO add your handling code here:
        columnName = "Measurement";
        gui.renameColumn(tblCProducts, columnNumber, columnName);
        clothes = db.loadAllClothing();
        DefaultTableModel dtm = (DefaultTableModel)tblCProducts.getModel();
        //gui.clearRows(dtm.getRowCount(), dtm);
        String [] data = new String[5];
        gui.populateClothes(data, clothes, dtm, tblCProducts);
    }//GEN-LAST:event_rbClothingActionPerformed

    private void rbFootwearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFootwearActionPerformed
        // TODO add your handling code here:
        columnName = "Size";
        gui.renameColumn(tblCProducts, columnNumber, columnName);
        shoes = db.loadAllFootwear();
       
        DefaultTableModel dtm = (DefaultTableModel)tblCProducts.getModel();
        //gui.clearRows(dtm.getRowCount(), dtm);

        String [] data = new String[5];
        gui.populateShoes(data, shoes, dtm, tblCProducts);
        
        
        
        
        
        //Creates a default list model
//        DefaultListModel dlmF = new DefaultListModel();
//        //Cycles through all the shoes in the hashmap
//        shoes.values().forEach((c) -> {
//            // Adds the shoes object to the default list model
//            dlmF.addElement(c);
//           
//        });
//        //Shows a list of shoes
//        listProducts.setModel(dlmF);
    }//GEN-LAST:event_rbFootwearActionPerformed

    private void comboQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboQuantityActionPerformed
        // TODO add your handling code here:
        
        
     
        DefaultComboBoxModel jcb = new DefaultComboBoxModel();
        jcb = (DefaultComboBoxModel)comboQuantity.getModel();
        String itemQ = (String)jcb.getSelectedItem();
        itemTaken = Integer.parseInt(itemQ);
        
        
    }//GEN-LAST:event_comboQuantityActionPerformed

    private void btnAddProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductsActionPerformed
        // TODO add your handling code here:
        String orderName;
        int productId;
        boolean isClothing;
        int quantity;
        double lineTotal;
        action = "added";
        if (rbClothing.isSelected())
        {

            Clothing cloth = gui.findClothing(tblCProducts);
            isClothing = true;
            
            if (cloth.getProductName().equals(error))
            {
                gui.warning(lblResult, cloth, action);
            }
            else
            {
                if (itemTaken == 0 || cloth.getStockLevel() == 0)
                {
                    lblResult.setText("No clothing left in stock or quantity is equal to zero");
                }

                else if (cloth.getStockLevel() >= itemTaken)
                {
                    int nStockLevel = cloth.getStockLevel() - itemTaken;
                    cloth.setStockLevel(nStockLevel);
                    db.editClothing(cloth);
                    clothes = db.loadAllClothing();

                    orderName = cloth.getProductName();
                    productId = cloth.getProductID();
                    
                    quantity = itemTaken;
                    lineTotal = quantity * cloth.getPrice();

                    db.saveOrderLine(productId, orderName,  quantity, lineTotal);

                    lblResult.setText("Clothing added to order line");

                    
                }

                else
                {
                    lblResult.setText("Quantity selected is too high. Please select a smaller quantity");
                }
            }

        }
        
        else if (rbFootwear.isSelected())
        {

            Footwear shoe = gui.findFootwear(tblCProducts);
            //Clothing selected is false
            
            if (shoe.getProductName().equals(error))
            {
                gui.warning(lblResult, shoe, action);
            }
            else
            {
                if (itemTaken == 0 || shoe.getStockLevel() == 0)
                {
                    lblResult.setText("No clothing left in stock or quantity is equal to zero.");
                }

                else if (shoe.getStockLevel() >= itemTaken)
                {
                    int nStockLevel = shoe.getStockLevel() - itemTaken;
                    shoe.setStockLevel(nStockLevel);
                    System.out.println("" + shoe.getStockLevel());
                    db.editFootwear(shoe);
                    shoes = db.loadAllFootwear();

                    orderName = shoe.getProductName();
                    productId = shoe.getProductID();
                    
                    quantity = itemTaken;
                    lineTotal = quantity * shoe.getPrice();
                    db.saveOrderLine(productId, orderName, quantity, lineTotal);
                    

                    lblResult.setText("Footwear added to order line");

                    
                }

                else if (itemTaken == 0)
                {
                    lblResult.setText("Please select a quantity greater than zero.");
                }

                else if (shoe.getStockLevel() == 0)
                {
                    lblResult.setText("Clothing out of stock");
                }

                else
                {
                    lblResult.setText("Please select a higher quantity.");
                }

            }

        }
        else
        {
            lblResult.setText("Clothing or footwear must be selected");
        }
    }//GEN-LAST:event_btnAddProductsActionPerformed

    private void btnCHomePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCHomePageActionPerformed
        // TODO add your handling code here:
        CHomeGUI ch = new CHomeGUI(cust);
        this.dispose();
        ch.setVisible(true);
    }//GEN-LAST:event_btnCHomePageActionPerformed

    private void btnCViewBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCViewBasketActionPerformed
        // TODO add your handling code here:
        CViewOrderLines cvol = new CViewOrderLines(ols, cust);
        this.dispose();
        cvol.setVisible(true);
    }//GEN-LAST:event_btnCViewBasketActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CBrowseProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CBrowseProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CBrowseProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CBrowseProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CBrowseProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProducts;
    private javax.swing.JButton btnCHomePage;
    private javax.swing.JButton btnCViewBasket;
    private javax.swing.JComboBox<String> comboQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblResult;
    private javax.swing.JRadioButton rbClothing;
    private javax.swing.JRadioButton rbFootwear;
    private javax.swing.JTable tblCProducts;
    // End of variables declaration//GEN-END:variables
}
